https://www.yuque.com/tangxiaohu/qcerc2/ahapxi

一、推荐系统简介
1.1 推荐系统由三部分组成
● 数据提供了信息。数据储存了信息，包括用户与内容的属性，用户的行为偏好例如对新闻的点击、玩过的英雄、购买的物品等等。这些数据特征非常关键，甚至可以说它们决定了一个算法的上限。
● 算法提供了逻辑。数据通过不断的积累，存储了巨量的信息。在巨大的数据量与数据维度下，人已经无法通过人工策略进行分析干预，因此需要基于一套复杂的信息处理逻辑，基于大量的数据学习返回推荐的内容或服务。
● 架构解放了双手。架构保证整个推荐自动化、实时性的运行。架构包含了接收用户请求，收集、处理，存储用户数据，推荐算法计算，返回推荐结果等。一个推荐系统的实时性要求越高、访问量越大，那么这个推荐系统的架构会越复杂。
1.2 推荐系统整体框架
见附件图
● 协议调度：请求的发送和结果的回传。在请求中，用户会发送自己的ID，地理位置等信息。结果回传中会返回推荐系统给用户推荐的结果。
● 推荐算法：算法按照一定的逻辑为用户产生最终的推荐结果，不同的推荐算法基于不同的逻辑与数据运算过程。
● 消息队列：数据的上报与处理。根据用户的ID，拉取例如用户的性别、之前的点击、收藏等用户信息。而用户在APP中产生的新行为，例如新的点击会储存在存储单元里面。
● 存储单元：不同的数据类型和用途会储存在不同的存储单元中，例如内容标签与内容的索引存储在mysql里，实时性数据存储在redis里，需要进行数据统计的大量离线数据存储在hivesql里。

https://www.yuque.com/u2274123/gp734f/agg6b5
推荐系统的架构分为数据部分和模型部分，数据部分主要分为实时数据处理、准实时数据处理、离线数据处理；
模型部分主要分为模型训练、模型评估、模型部署、线上推断。

数据部分
从实时数据处理到离线数据处理，数据处理的实时性由强到弱，但是数据处理的能力由弱到强；因此，在整个数据处理部分，往往会结合两部分共同使用。数据的实时性，可以快速抓取用户兴趣的变化；数据的离线处理可以保证模型更快的收敛。
数据部分的主要出口
1. 生成训练样本
2. 生成线上特征
3. 生成系统监控，商业智能系统所需的统计型数据
模型部分
模型训练分为离线训练和模型微更新，离线训练使用全量数据进行，并且训练的周期较长；模型微更新仅仅使用最近产生的数据进行训练，使模型更快抓取用户的兴趣变迁，因此训练周期较短，可以缩短到天级别的训练。
模型评估需要一套评估体系，从离线评估到在线评估，在这个评估的过程中不断筛选模型，并且模型的评估结果更加接近线上真实环境。离线评估和在线评估各自有不同的评估方法和评估指标。
模型部署有以下几种方法：
1. 预存Embedding
2. 预存Embedding+轻量级模型上线
3. 利用PMML转换和模型部署
  a. Spark部分使用JPMML序列化生成PMML文件
  b. JAVA Server完成PMML模型的解析，生成预估模型
4. TensorFlow Serving部署
从模型的结构分类，模型部分可以分为召回层、排序层、再排序层；召回层为了召回出用户可能感兴趣的物品；排序曾为了对召回层得到的物品精排，从而形成推荐列表；再排序层是为了增加推荐列表的新鲜度、流行度、多样性。

实战项目的缺陷
1. 无线上环境，因此没有进行模型的线上部署以及线上推断模块
2. 无线上环境，新闻数据的实时性没有体现出来
3. 再排序的内容没有实现
4. 没有进行商业指标的度量



二、用户画像
名词解释：标签——我们对多维事物的降维理解，抽象出事物更具有代表性的特点。
JI纳入
2.1 用户画像的分类：原始数据-事实标签-模型标签
2.2 内容画像&环境画像-感觉没说好
2.2.1 内容画像
推荐内容与场景通常可以分为以下几类，根据所推荐的内容不同，其内容画像的处理方式也不同。
● 文章推荐：例如新闻内容推荐，需要利用NLP（自然语言处理）的技术对文章的标题，正文等提取关键词、标签、分类等。
● 视频推荐：除了对于分类、标题关键词的抓取外，还依赖于图片与视频处理技术，例如识别内容标签、内容相似性等。
四、算法构建
4.1 推荐算法构建流程
见图
推荐算法主要分为以下几步：
● 召回：当用户以及内容量比较大的时候，往往先通过召回策略，将百万量级的内容先缩小到百量级。
● 过滤：对于内容不可重复消费的领域，例如实时性比较强的新闻等，在用户已经曝光和点击后不会再推送到用户面前。
● 精排：对于召回并过滤后的内容进行排序，将百量级的内容按照顺序推送。
● 混排：为避免内容越推越窄，将精排后的推荐结果进行一定修改，例如控制某一类型的频次，EE问题处理等。
● 强规则：根据业务规则进行修改，例如在活动时将某些文章置顶以及热点内容的强插等。
4.2 召回策略
单策略召回：利用标签时效等进行单一策略召回，热销召回，协同召回，标签召回，时间召回，其他策略。速度快，实现简单
多路召回：融合多个单一策略，方法相互补充，可以覆盖不同的召回需求，大量人工调参
embedding召回：基于预训练好的用户、物品embedding向量召回,可以融合大量的用户和物品特征，提高整体精确度，新item、新user的缺失，实时性更弱
4.3 粗排策略
● 粗排层目的：为后续链路提供集合
5.4 精排策略
● 精排模型基本原理
精排模型：
基于内容属性的相似性推荐
基本原理：
根据内容的相似性，例如标题、标签、正文相似性进行推荐
优点：对新内容友好，较为公平

精排模型：
基于用户行为的协调过滤，分为基于用户的协调过滤、基于内容的协调过滤
基本原理：
根据用户过去的行为判断用户之间的相似性，推荐相似用户喜欢的内容，优点：适用于海量内容更新，但是用户行为场景比较固定；
根据用户过去的行为判断内容之间的相似性，推荐相似的内容

精排模型：
分类模型，分为逻辑回归，FM，树模型，深度学习DNN
基本原理：
将点击量作为Y变量，预测用户对每一个内容的0-1之间的点击率

精排模型：
因子分解
基本原理：
将评分矩阵分解为用户与内容的矩阵，根据相似性预测其他评分
● 精排模型优缺点
https://www.yuque.com/tangxiaohu/qcerc2/ahapxi
4.5 重排层策略
● MBA问题：所有的选择都要同时考虑寻找最优解以及累计收益最大的问题。
● 多样性问题：多样性过差-用户探索不够，兴趣过窄，系统泛化能力以及可持续性变差；流量过于集中在少数item上，系统缺乏活力。多样性过强-用户兴趣聚焦程度弱；item流量分配平均，对优质item激励不足。
● 上下文问题

4.6 冷启动
4.6.1 用户冷启动
其主要几个方向为：加强特征与信息的补充、EE问题平衡、实时化加强。
信息补充
1. side information 补充：例如商品类目、领域知识图谱、第三方公司数据的补充。
2. Cross domain：利用共同的用户在不同地方的数据进行冷启。
3. 用户填写兴趣。
4. 元学习：利用多任务间具有泛化能力的模型，进行少样本学习(few-shot learning)。
快速收敛
1. 主动学习、在线学习、强化学习：快速收集数据，且反馈到特征与模型中。
2. 增强模型实时化以及收敛能力。

4.6.2 内容冷启动
以短视频推荐为例，平台常常采用大小池逻辑，对内容进行不同流量的探索，并根据实际的反馈数据来决定内容可以进入的推荐范围。其中表现优质的内容将不断的进入更大的流量池中，最终进入推荐池，形成精品召回池。
五、当前发展
因果与推荐结合
● 推荐系统中的特征向量和用户最终的反馈（比如点击、点赞等）之间的关系是由因果关系和非因果关系共同组成。
因果关系是反应物品被用户偏好的原因，
非因果关系仅反应用户和物品之间的统计相关性，比如曝光模式、公众观念、展示位置等。而现有推荐算法缺乏对这两种关系的区分。

六、算法衡量标准
6.1 指标选择
● 硬指标：，推荐系统最重要的作用是提升一些“硬指标”。例如新闻推荐中的点击率，但是如果单纯以点击率提升为目标，最后容易成为一些低俗内容，“标题党”的天下。
● 软指标：除了“硬指标”，推荐系统还需要很多“软指标”以及“反向指标”来衡量除了点击等之外的价值。
好的推荐系统能够扩展用户的视野，发现那些他们感兴趣，但是不会主动获取的内容。
同时推荐系统还可以帮助平台挖掘被埋没的优质长尾内容，介绍给感兴趣的用户。
推荐准确度：包含点击率（PV和UV点击率）、点击后行为（点击后停留时长、用户次日、3日、7日留存率）、用户付费
推荐覆盖度：覆盖度，基尼系数
其他指标：用户满意度、多样性、实时性、稳健性
6.2 推荐效果
如何去获得推荐效果。可以分为离线实验、白板测试（用户调查）、在线实验三种方法。
算法构建阶段（离线实验）、算法内侧阶段（用户反馈）、算法上线阶段（在线实验）
七、算法之外
7.1 问题：推荐算法是否会导致信息不平等和信息茧房？
答案：推荐系统并非导致信息不平等和信息茧房的根本原因。
● 内容的不平等或许更多的产生于用户天性本身，而推荐算法的作用更像是帮助用户“订阅”了不同的内容。
● 人们更加集中于垂直的喜好是不可逆转的趋势。
● 产品价值与数据指标的平衡：推荐算法往往只能带来短期的局部最优解。产品仍需要从本质出发，来看待产品给用户带来的本质价值。对产品方向的判断、以及对产品价值的坚持才是产品寻找全局最优解的方式。
7.2 算法可能产生蝴蝶效应
● 从feed传播来看，推荐算法(热门)给予其冷启流量，提升传播速率，利于其对抗时间衰减，快速达到社交裂变拐点，进而大规模传播
● 推荐算法对feed的影响是巨大的，若无法被推荐算法识别，其获得较高热度的可能性较低，最终导致产品的流量主要集中在被推荐算法识别并推荐的feed上。其短期内对内容生态、浏览者体验有较为重要的决定作用；长期来看，对内容氛围、作者反馈、浏览者长期留存都有较大的影响。