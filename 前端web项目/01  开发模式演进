Spring Boot+Vue 3大型前后端分离项目实战

1、在初学Java Web开发时，通常使用JSP+Servlet完成前端视图和后端业务逻辑的开发，这种开发模式属于Model1模式
虽然实现了逻辑功能和显示功能的分离，但是视图层和控制层都是由JSP或其他后端的模板引擎技术实现的
即视图层和控制层并没有实现分离

2、常用的框架组合有Spring+Struts/Spring MVC+Hibernate/Mybatis
MVC开发模式，它是为了克服Model1的不足而设计的

    MVC的具体含义是Model+View+Controller，即模型层+视图层+控制层

    （1）Model（模型层）：常常使用JavaBean编写它，接收视图层请求的数据，之后进行相应的业务处理并返回最终的处理结果
    （2）View（视图层）：代表和用户交互的界面，负责数据的采集和展示，通常由JSP实现
    （3）Controller（控制层）：从用户端接收请求，之后将请求传递给模型层并告诉模型层应该调用什么功能模块来处理该请求
            它能够协调视图层和模型层之间的工作，起到中间枢纽的作用，一般交由Servlet实现

    项目开发在进行模块分层时也会分为三层：控制层、业务层和持久层
    控制层负责接收参数、调用相关业务层、封装数据，以及路由并将数据渲染到JSP，并在JSP中将后台的数据展现出


3、传统MVC开发模式的痛点
    效率问题：
    人员分工不明：
    不利于项目演进：
    无法满足业务需求：除Web应用能够使用传统的MVC模式开发外，其他的都无法使用该模式进行开发
                                    像原生App或微信小程序，前端UI和用户交互部分都有各自的技术实现
                                    再通过调用RESTful API的方式与后端进行数据交互


4、 
    4-1前后端分离：
    常用的是前端人员自行实现跳转逻辑和页面交互；后端人员只负责提供接口数据，二者之间通过调用RESTful API的方式进行数据交互
    
    
    4-2前后端分离是一种人员分工模式：
    前后端分离的核心就是后端负责数据和逻辑的处理，前端负责页面显示和动效的交互。
    前端开发人员通常包括Web开发人员、原生App开发人员。后端开发人员则是指Java开发人员（以Java语言为例

    后端人员专注于控制层(RESTful API)、服务层、数据访问层
    前端人员专注于前端控制层、视图层

    4-3前后端分离是一种项目部署模式：
    