把心仪的商品加入购物车并确认需要购买的商品和对应的数量后，就可以执行提交订单的操作
此时就由购物车模块切换到另一个电商模块——订单模块

(1)提交订单（由新蜂商城用户发起）
(2)订单入库（后台逻辑，用户无感知）
(3)支付订单（由新蜂商城用户发起）
(4)订单处理（包括确认订单、取消订单、修改订单信息等操作，新蜂商城用户和管理员都可以对订单进行处理）

1、订单确认页面接口的开发

1-1 商城中的订单确认步骤
    订单确认页面中包含在购物车中选择的商品信息，以及收货地址信息、运费信息、优惠信息等
    购物车页面中只有商品信息，而订单确认页面中则是多种信息的集合
    只有全部信息完整，才能够生成订单数据

1-2 订单确认的前置步骤
    根据购物车中的待结算商品数量来判断“结算”按钮是否正常展示
    如果购物车中无数据，此时无商品列表展示，也没有“结算”按钮
    只有购物车列表数据正常，才会出现“结算”按钮，之后才能进入订单确认页面

1-3 订单确认页面的数据整合
    订单确认页面中不仅有商品数据，还有用户数据和支付数据

1-4 业务层代码的实现
    订单确认页面中的商品信息和支付金额可以分别通过
    查询tb_newbee_mall_shopping_cart_item购物项表和tb_newbee_mall_goods_info商品表来获取


    getCartItemsForSettle()方法并传入userId字段和cartItemIds字段作为参数
    然后通过SQL语句查询userId和选中的购物项id列表，获取前端页面中需要展示的购物项列表数据
    需要展示的商品信息可以通过购物项表中的goods_id字段获取每个购物项对应的商品信息
    接着填充数据，将相关字段封装到NewBeeMallShoppingCartItemVO对象中，最后将封装好的List对象返回


1-5 订单确认页面接口的实现
    订单确认页面的信息是用户在购物车中选择结算的购物项。
    用户可能全选商品并进行结算，也可能选择部分商品并进行结算
    订单确认页面中的数据不能直接使用购物车列表接口，需要新增一个列表信息获取的接口

    购物车列表接口不需要额外传参，只需要用户保持登录状态即可，后端可以根据userId字段将其购物车中的数据查询出来
    订单确认页面的数据获取接口则不同，需要查询用户选择的结算商品数据，因此需要另外定义参数


2、订单模块的表结构设计

2-1 订单主表及关联表设计
    （1）订单主表
    订单主表tb_newbee_mall_order表结构设计的主要字段：
    user_id：用户的id，根据这个字段来确定是哪个用户下的订单
    order_no：订单号，用于唯一标识订单并在后续查询订单时使用，是每个电商系统都有的设计
    paystatus、paytype、pay_time：支付信息字段，包括支付状态、支付方式、支付时间
    order_status：订单状态字段
    create_time：订单生成时间
    （2）订单项关联表item
    订单项关联表tb_newbee_mall_order_item表结构设计的主要字段：
    order_id：关联的订单主键id，标识该订单项是哪个订单中的数据
    goodsid、goodsname、goodscoverimg、sellingprice、goodscount：订单中的商品信息，记录下单时的商品信息
    create_time：记录生成时间
    （3）订单地址关联表  address表
    订单地址关联表tb_newbee_mall_order_address表结构设计的主要字段
    order_id：关联的订单主键id，标识该地址是哪个订单中的收货地址数据


2-2 订单项表的设计思路
     购物项对象是商品与购物车之间抽象出的一个对象
     订单项对象是商品与订单之间抽象出的一个对象


2-3 用户收货地址管理表
    订单确认页面中可以添加、选择收货地址，提交后即可生成一个订单信息
    用户收货地址表tb_newbee_mall_user_address的表结构:



3、订单生成的流程及编码
3-1
    单确认页面处理完毕后，紧接着就是生成订单的环节
    提交订单”按钮，商城系统就会对应地生成一笔订单数据并保存在数据库中


3-2 订单生成接口的实现

    把用户选择的购物项id数组，请求方法为POST
    (1)验证收货地址信息，有则继续执行后续流程，否则返回异常信息。
    (2)验证选中的购物项是否正确，正确则继续执行后续流程，否则返回异常信息。
    (3)将购物项数据和用户信息作为参数传给业务层的saveOrder()方法进行订单生成的业务逻辑操作。
    (4)如果订单生成成功，则业务层的saveOrder()方法会返回订单号。

3-3 订单生成逻辑的实现
    (1)检查在结算商品中是否包含已下架商品，有则抛出一个异常，无则继续执行后续流程。
    (2)检查商品数据和商品库存，如果商品数据有误或商品库存不足，则抛出异常；若一切正常，则继续执行后续流程。
    (3)对象的非空判断。
    (4)生成订单后，购物项数据需要被删除，这里调用NewBeeMallShoppingCartItem Mapper.deleteBatch()方法将这些数据批量删除。
    (5)更新商品库存记录。
    (6)判断订单价格，如果所有购物项加起来的数据为0或小于0，则不继续生成订单
    (7)生成订单号并封装NewBeeMallOrder对象，保存订单记录到数据库中。
    (8)封装订单项数据并保存订单项数据到数据库中。
    (9)返回新订单的订单号字段值。

4、订单支付模拟接口的实现
    前端在接收到生成订单接口的成功响应后，会在订单确认页面中打开一个支付的底部弹窗
    即模拟支付功能也在订单确认页面完成


5、订单详情接口的实现
    5-1 订单详情页面的作用
    订单详情页面是商家与用户之间最直接的一个纽带

    1.展示基本的订单信息
    (1)订单基本信息：订单号、订单状态、价格等。
    (2)配送信息：物流信息、收货地址信息。
    (3)商品信息：商品名称、商品图、购买数量等。
    (4)发票信息：发票信息和开票状态。
    (5)客服：在线联系商家或拨打电话。

    2.为用户提供订单操作
    用户可以在订单详情页面上进行支付订单、取消订单、确认订单等操作

    5-2 订单详情页面的数据格式定义
        订单详情页面的数据格式定义：

    5-3 订单详情接口的编码实现
    订单详情页面的请求地址被定义为/orders/{orderNo}，接收的参数为订单号
    (1)根据订单号orderNo字段查询订单数据，如果不存在，则提示错误信息；如果存在，则继续执行后续流程。
    (2)判断订单的userId是否为当前登录的用户id，如果不是，则为非法请求，不能查看别人的订单信息。
    (3)根据订单id查询订单项表数据。(4)封装NewBeeMallOrderDetailVO订单详情页面数据并返回。

6、订单列表接口的实现
    订单生成后就能够在“个人中心”的订单列表中看到相关数据
    商城端的订单列表也支持分页功能

6-1 订单列表数据格式的定义

6-2 订单列表接口的编码实现
    订单列表中的字段可以分别通过查询tb_newbee_mall_order订单表和
    tb_newbee_mall_order_item订单项表来获取
    先将分页参数和当前用户的userId封装到PageQueryUtil对象中并调用业务层的方法
    然后把当前用户的订单数据按照不同的分页参数查询出来并将返回结果响应给调用端

7、订单处理流程及订单状态介绍
7-1 订单处理流程
    订单模块就是电商系统的心脏


    异常的订单处理流程：


7-2 订单状态介绍
订单流程完善的编码实践都是围绕着订单状态的改变来做的功能实现
订单表中的order_status字段就是订单状态字段：
(1)0：待支付
(2)1：已支付
(3)2：配货完成
(4)3：出库成功
(5)4：交易成功
(6)-1：手动关闭
(7)-2：超时关闭
(8)-3：商家关闭

现实中的订单流程还会涉及客服、订单售后、订单退款等逻辑
    

