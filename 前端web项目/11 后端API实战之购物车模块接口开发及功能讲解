商品功能模块和订单结算模块之间有一个功能模块，即购物车模块

它是整个购物环节从商品到订单转化的中间状态模块，负责打通商品和订单这两个模块

1、购物车模块简介
        线上购物车模块的作用是存放商城用户挑选的商品数据

1-1 购物车模块的四个功能：
        将商品添加到购物车中的功能
        购物车中的购物项列表功能
        修改购物项的功能
        删除购物车中某个购物项的功能
        这4个接口的功能非常典型，分别是增、查、改、删


2、 购物车表结构设计及数据层编码


2-1 购物车表结构设计

        购物车表结构主要字段：
        user_id：用户的id，根据这个字段确定用户购物车中的数据
        goods_id：关联的商品id，根据这个字段查询对应的商品信息并显示到页面上
        goods_count：购物车中某件商品的数量
        create_time：商品被添加到购物车中的时间

2-2 新建购物车模块的实体类和Mapper接口


2-3 创建Mapper接口的映射文件

3、将商品加入购物车接口的实现

3-1 业务层代码的实现
        保存商品到购物车中的saveNewBeeMallCartItem()方法
        这里先对参数进行校验，校验步骤如下。
        (1)根据用户信息和商品信息查询购物项表中是否已存在相同的记录，如果存在，则进行修改操作；如果不存在，则进行后续操作。
        (2)判断商品数据是否正确。
        (3)判断用户购物车中的商品数量是否超出最大限制。在校验通过后再进行新增操作，将该记录保存到数据库中。以上操作都需要调用对应的数据层方法和具体的SQL语句来完成


3-2 控制层代码的实现
        处理该请求的方法名称为saveNewBeeMallShoppingCartItem()，请求类型为POST


4、 购物车列表接口的实现

4-1 数据格式的定义
        购物车页面中有购物项列表数据和底部总览性数据
        底部总览性数据包括加购总量字段和总价字段

4-2 业务层代码的实现
        代码先定义了getMyShoppingCartItems()方法并传入userId字段作为参数
        然后通过SQL语句查询当前userId字段下的购物项列表数据
        通过购物项表中的goods_id字段获取每个购物项对应的商品信息
        填充数据，即将相关字段封装到NewBeeMallShoppingCartItemVO对象
        将封装好的List对象返回

4-3 控制层代码的实现
        处理该请求的方法名称为cartItemList()，请求类型为GET
        一次性加载所有的购物车数据，因此该接口直接返回一个List对象，而不是一个PageResult类型的分页对象

5、编辑购物项接口的实现
        编辑需要购买的商品数量
        删除  编辑数量  

5-1 业务层代码的实现
        updateNewBeeMallCartItem()方法首先对参数进行校验，校验步骤如下：
        (1)根据前端传参的购物项主键id字段查询购物项表中是否存在该记录，如果不存在，则返回错误信息；如果存在，则进行后续操作
        (2)判断用户购物车中的商品数量是否已超过最大限制
        在校验通过后进行修改操作，将该购物项记录的数量和时间进行修改。以上操作都需要调用SQL语句来完成
        deleteById()方法的实现逻辑并不复杂，即调用数据层的方法将当前购物项的is_deleted字段修改为1。这里并不是真正地删除，而是逻辑删除。

5-2 控制层代码的实现
        修改购物项接口的映射地址为/api/v1/shop-cart，请求方法为PUT



6、接口测试

6-1 购物车列表接口测试

6-2 添加商品到购物车接口测试

6-3 修改购物项数据接口测试

6-4 删除购物项接口测试
